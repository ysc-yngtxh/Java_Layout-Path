server:
    port: 8080

spring:
    security:
        oauth2:
            client:
                registration:
                    # github:
                    #     client-id: Ov23liukOOM7knKdMlD8
                    #     client-secret: 5f6ec1ae0581fbaed813b2cf2c643736ad4e4cb5
                    #     redirect-uri: http://localhost:8080/github/callback
                    #     scope: repo,user
                    gitee:
                        client-id: 8def619da68a212d02a36d471cef229ab3b80c81222e76ed2e581de76f9a6d0a
                        client-secret: 1f5276f0abd9c8b8b5eee50356ca912d61e62a59d0b8ad285dc49b4879b0ddad
                        # SpringSecurity 规定回调地址为：/login/oauth2/code/* ，否则不识别
                        redirect-uri: http://localhost:8080/login/oauth2/code/gitee/callback
                        authorization-grant-type: authorization_code
                        scope: user_info
                        provider: gitee
                provider:
                    # github:
                    #     authorization-uri: https://github.com/login/oauth/authorize
                    #     token-uri: https://github.com/login/oauth/access_token
                    #     user-info-uri: https://api.github.com/user
                    #     user-name-attribute: login
                    gitee:
                        authorization-uri: https://gitee.com/oauth/authorize
                        token-uri: https://gitee.com/oauth/token
                        user-info-uri: https://gitee.com/api/v5/user
                        user-name-attribute: login
# user-name-attribute: login 的作用是告诉 Spring Security OAuth2 将 OAuth2 提供商返回的用户信息中的 login 属性视为用户的用户名。
# 如果不设置 user-name-attribute，Spring Security OAuth2 将默认使用 OAuth2 提供商返回的用户信息中的 sub 属性作为用户的用户名。
# 在 GitHub 的用户信息响应中，sub 属性是用户的唯一标识符，而 login 属性是用户的用户名。因此，如果将 user-name-attribute 设置为 login，Spring Security OAuth2 将使用 login 属性的值作为用户的用户名。
# 如果不设置 user-name-attribute，Spring Security OAuth2 将使用默认的 sub 属性作为用户的用户名。这可能适用于大多数 OAuth2 提供商，因为它们通常会返回一个唯一的用户标识符。
