<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.StudentMapper">
    <!-- id        标签只能修改主键字段
         jdbcType  列在数据库种字段的类型(可以省略不写)
         result作用：1、当数据库中字段名称与实体类对象的属性名不一致时，可以进行转换
                    2、当前查询的结果没有对象一个表的时候，可以自定义一个结果集
      -->
    <!--properties配置文件中设置了实体类的别名，因此不需要全限定类名，爆红不影响-->
    <resultMap id="BaseResultMap" type="Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>

    <!--sql语句片段，将公共的部分抽取出来-->
    <sql id="Base_Column_List">
        id, name, email, age
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List"/><!--这里就没有查询字段，而是采用SQL语句片段-->
        from db_student
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from db_student
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.example.domain.Student">
        insert into db_student (id, name, email, age)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})
    </insert>

    <!--选择性新增数据-->
    <insert id="insertSelective" parameterType="com.example.domain.Student">
        insert into db_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="age != null">
                age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.Student">
        update db_student
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.example.domain.Student">
        update db_student
        set name  = #{name,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            age   = #{age,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
