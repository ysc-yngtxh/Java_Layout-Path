/**
 * @author 游家纨绔
 */
/*
存储引擎
  1、什么是存储引擎？
        存储引擎这个名字只有在MySQL中存在。(Oracle中有对应的机制，但是不叫作存储引擎。Oracle中没有特殊的名字，就是“表的存储方式”)
     MySQL支持很多存储引擎，每一个存储引擎都对应一种不同的存储方式。每一个存储引擎都有自己的优缺点，需要在合适的时机选择合适的存储引擎
     (MySQL默认使用的存储引擎是InnoDB方式。默认采用的字符集是UTF8)

     存储引擎说白了就是
        ①、如何存储数据
        ②、如何为存储的数据建立索引
        ③、如何更新、查询数据 等技术的实现方法。
        例如: 如果你在研究大量的临时数据，你也许需要使用内存存储引擎，因为内存存储引擎能够在内存中存储所有的表格数据。
             又或者，你也许需要一个支持事务处理的数据库，以确保事务处理不成功时数据的回退能力，你就要选择支持事务的存储引擎。
---------------------------------------------------------------------------------------------------------------
  2、查看当前MySQL支持的存储引擎
       show engines \G;

       目前Mysql8.0.34版本支持的存储引擎有9个
---------------------------------------------------------------------------------------------------------------
  3、常见的存储引擎
             第一个: InnoDB
            Engine: InnoDB
           Support: DEFAULT
           Comment: Supports transactions, row-level locking, and foreign keys
      Transactions: YES
                XA: YES
        Savepoints: YES

        InnoDB还引入了行级锁定和外键约束，在以下场合下，使用InnoDB是最理想的选择：
            ①、更新密集的表： InnoDB存储引擎特别适合处理多重并发的更新请求。
            ②、事务：        InnoDB存储引擎是支持事务的标准MySQL存储引擎。
            ③、自动灾难恢复： 与其它存储引擎不同，InnoDB表能够自动从灾难中恢复。
            ④、外键约束：     MySQL支持外键的存储引擎只有InnoDB。
            ⑤、支持自动增加列auto_increment属性。

        表的结构存储在xxx.frm文件中
        数据存储在tablespace这样的表空间中(逻辑概念)，无法被压缩，无法转换成只读
        这种InnoDB存储引擎在MySQL数据库崩溃之后提供自动恢复机制。
        InnoDB支持级联删除和级联更新：(外键约束中删除（更新）父表中的一组数据，相对应的子表中约束的数据也会被删除（更新）)

        优点：支持外键、行级锁、事务等。这种引擎数据的安全存储得到保障(MYSQL默认的存储引擎)
  ---------------------------------------------------------------------------------------------------
              第二个: MyISAM
             Engine: MyISAM
            Support: YES
            Comment: MyISAM storage engine
       Transactions: NO
                 XA: NO
         Savepoints: NO

        每当我们建立一个MyISAM引擎的表时，就会在本地磁盘上建立三个文件，文件名就是表名。
        例如: 我建立了一个MyISAM引擎的tb_demo表，那么就会生成以下三个文件：
             tb_demo.frm (存储表定义的文件)
             tb_demo.MYD (存储表中数据的文件)
             tb_demo.MYI (存储表中索引的文件)

        MyISAM表无法处理事务，这就意味着有事务处理需求的表，不能使用MyISAM存储引擎。MyISAM存储引擎特别适合在以下几种情况下使用：
           ①、选择密集型的表，MyISAM存储引擎在筛选大量数据时非常迅速，这是它最突出的优点。
           ②、插入密集型的表，MyISAM的并发插入特性允许同时选择和插入数据。

        由此看来，MyISAM存储引擎很适合管理服务器日志数据。

        由于 MyISAM 只支持表级锁定，所以在高并发的情况下可能会出现性能问题。
        相对而言，InnoDB 存储引擎支持行级锁定，因此更适合于高并发的场景，能够提供更好的性能和并发控制。
        因此，一般建议在需要支持事务和并发控制的场景下使用 InnoDB 存储引擎，而不是 MyISAM。

        MyISAM这种存储引擎不支持事务。
           优点：可被压缩，节省存储空间，并且可以转换为只读表，提高检索效率。只支持表锁不支持行级锁
           缺点：不支持事务
  ---------------------------------------------------------------------------------------------------
             第三个: MEMORY
            Engine: MEMORY
           Support: YES
           Comment: Hash based, stored in memory, useful for temporary tables
      Transactions: NO
                XA: NO
        Savepoints: NO
         优点：因为所有数据和索引都是存储在内存当中的，查询速度快
         缺点：不支持事务。因为所有数据和索引都是存储在内存当中的，所以数据容易丢失（比如说断电数据全没了）。
 */
public class K11_存储引擎 {}
