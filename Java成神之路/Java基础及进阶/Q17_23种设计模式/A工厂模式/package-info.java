package Q17_23种设计模式.A工厂模式;

/**
 * @Author 游家纨绔
 * @Date 2025-06-16 17:00:00
 *
 * 这里使用汽车作为示例，来说明简单工厂模式、工厂方法模式和抽象工厂模式的区别。
 *    品牌：魏牌坦克、特斯拉、小米
 *    产品等级：燃油车、纯电车、新能源
 *    产品族：轿车、SUV、超跑
 *
 * 1、简单工厂模式：简单工厂模式有一个问题就是，类的创建极度依赖工厂类（SimpleCarFactory）。
 *                如果想要拓展一个“品牌”，就必须对工厂类进行修改，这违背了开闭原则。
 * 2、工厂方法模式：该模式下想要拓展一个“品牌”，只需增加一个实现类就行了，无需去改动现成的代码。拓展性较好！
 * 3、抽象工厂模式：该模式下想要拓展一个 “品牌” 或者扩展一个 “产品族”，只需要增加合适的实现类即可。
 *                但扩展 “产品等级” 时需要修改现有的代码（CarFactory），也就违背了开闭原则。
 *                比如：添加一个新的产品等级“混合动力车”，需要修改 CarFactory 接口和所有实现类。
 *
 * 总结：
 *     简单工厂：最简单，但不支持扩展，适合简单场景
 *     工厂方法：单一产品维度，支持扩展，符合开闭原则
 *     抽象工厂：产品族维度，支持“品牌”和”产品族”扩展，但“产品等级”扩展困难
 */
