server:
  port: 9900

spring:
  application:
    name: sentinel-datasource
  cloud:
    sentinel:
      # 取消控制台懒加载，这样就可以在访问Sentinel控制台的时候，不需要通过访问资源，就能在控制台显示资源信息
      eager:
        true
      transport:
        # 启动一个与Dashboard通信的进程，默认端口为8719
        # 这里的 spring.cloud.sentinel.transport.port 端口配置会在应用对应的机器上启动一个 Http Server，
        # 该Server会与 Sentinel控制台做交互。比如 Sentinel控制台添加了一个限流规则，会把规则数据push给这个Http Server接收，
        # Http Server 再将规则注册到 Sentinel 中。
        # 理解以下两个端口：8888相当于Sentinel的前端服务；8719相当于Sentinel的后端服务
        port: 8719
        # 控制台仪表盘地址
        dashboard: 127.0.0.1:8888

      # 表示是否启用 Sentinel 配置（如流量控制、熔断降级、系统保护等规则生效）
      # 该配置项的默认值为true，表示启用自动配置；配置值为false时，表示完全关闭 Sentinel 功能
      enabled: true
      # 表示是否启用 Web 拦截（即针对接口路径的拦截）默认值为true
      filter:
        enabled: true

      # sentinel数据源配置
      datasource:
        # 定义来自资源文件数据源的相关信息
        ds1:
          file:
            file: classpath:flow-rule.json
            # 表示该数据源中的规则属于哪种类型的规则(flow, degrade, authority, system, param-flow, gw-flow, gw-api-group)。注意网关流控规则 (GatewayFlowRule) 对应 gw-flow。
            rule-type: flow
            # 表示读取数据源配置格式，默认提供两种内置的值，分别是 json 和 xml (不填默认是json)。
            # 如果不想使用内置的 json 或 xml，可以填写 custom 表示自定义 Converter，然后再配置 converter-class 配置项，该配置项需要写类的全路径名
            data-type: custom
            converter-class: com.example.convert.CustomConvert
        # 定义来自nacos数据源的相关信息（项目需添加nacos相关依赖）
        # ds2:
        #   nacos:
        #     server-addr: localhost:8848
        #     username: nacos
        #     password: nacos
        #     rule-type: flow
        #     data-id: ${spring.application.name}-flow-rules.json
        #     data-type: json
        #     group-id: SENTINEL_DATASOURCE_GROUP
        # 定义来自zookeeper数据源的相关信息（项目需添加zookeeper相关依赖）
        # ds3:
        #   zk:
        #     path: /Sentinel-Demo/SYSTEM-CODE-DEMO-FLOW
        #     server-addr: localhost:2181
        #     rule-type: authority
        # 定义来自apollo数据源的相关信息（项目需添加apollo相关依赖）
        # ds2:
        #   apollo:
        #     namespace-name: application
        #     flow-rules-key: sentinel
        #     default-flow-rule-value: test
        #     rule-type: param-flow
