<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!--对应SpringCloud Hoxton.SR12版本的SpringBoot版本为【2.2.x, 2.3.x】-->
        <version>2.3.12.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example</groupId>
    <artifactId>01_SpringCloud-Netflix</artifactId>
    <name>${project.artifactId}</name>
    <description>${project.artifactId}</description>
    <version>1.0.0</version>

    <modules>
        <module>01.1_Provider</module>
        <module>01.2_Consumer</module>
        <module>01.3_Eureka</module>
        <module>01.4_Gateway</module>
        <module>01.5_Config</module>
    </modules>
    <packaging>pom</packaging>

    <!--父管理依赖的版本号-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!-- 注意⚠️：SpringCloud 支持Zuul、Ribbon、Hystrix的最后一个 spring-cloud-dependencies 版本为Hoxton.SR12 -->
        <spring-cloud.version>Hoxton.SR12</spring-cloud.version>
        <!--Zuul、Ribbon、Hystrix依赖已经被官方弃用，且最后一个版本为2.2.10.RELEASE
            spring-cloud-dependencies的 Hoxton.SR12 版本中其实也包含Zuul、Ribbon、Hystrix依赖，但是包含的版本是2.2.9.RELEASE。
            咱要用就用最新的版本，所以引入最后一个版本提供给子项目使用
        -->
        <spring-cloud-netflix-zuul.version>2.2.10.RELEASE</spring-cloud-netflix-zuul.version>
        <spring-cloud-netflix-hystrix.version>2.2.10.RELEASE</spring-cloud-netflix-hystrix.version>
        <mapper.starter-version>4.3.0</mapper.starter-version>
        <mysql-connector-j-version>9.2.0</mysql-connector-j-version>
    </properties>

    <!--Spring Cloud Dependencies 是一个用于管理 Spring Cloud 项目中依赖版本的工具。
        它通过在父项目的 pom.xml 文件中引入 spring-cloud-dependencies，可以统一管理所有子项目的依赖版本，从而简化项目的依赖管理
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 最后一个支持的Hystrix依赖版本（其中包含Ribbon依赖） -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring-cloud-netflix-hystrix.version}</version>
            </dependency>
            <!-- 最后一个支持的Zuul依赖版本（其中包含Web、Ribbon、Hystrix依赖） -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
                <version>${spring-cloud-netflix-zuul.version}</version>
            </dependency>
            <!-- 通用mapper -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper.starter-version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql-connector-j-version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
