
# 设置端口号
server:
  port: 10010

# 设置Eureka
spring:
  application:
    name: eureka-zuul
eureka:
  instance:
    prefer-ip-address: true  # 首选 IP 地址
  client:
    fetch-registry: true     # 表示是否从Eureka Server获取注册的服务信息
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka/


# zuul集成了ribbon和hystrix
ribbon:
  ConnectTimeout: 3000 # 请求连接的超时时间
  ReadTimeout: 3000    # 请求处理的超时时间
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          timeoutInMilliseconds: 60000


# 路由.规则.路由ip.path相当于只要路径中有 /provider-service/** 将会被请求转发为 serviceId中的路由地址。
# 连起来就是：http://localhost:10010/provider-service/**  ===> 转发到 provider-service上的 http://localhost:8088/**
# zuul:
#   routes:
#     ysc:
#       path: /provider-service/**
#       serviceId: provider-service
# 我们可以在zuul依赖中可以看到有ribbon依赖，所以负载均衡也是可以在内部实现的


# 有一种简化上述的配置
# 路由.规则.服务id   就是说只要访问路径中有/provider-service/**就会被请求转发到服务id
# zuul:
#   routes:
#     provider-service: /provider-service/**
# 我在做好配置文件后进行去测试，发现有转发错误，我尝试去配置ribbon的时长，问题解决。


# 但是我们可以尝试着发现本来访问 http://localhost:10010/api/provider/user/4 可以访问(注意添加请求过滤器参数)
# 可访问  http://localhost:10010/api/consumer-service/user/4 (默认简化配置)依旧能访问。问题是我并没有进行相关的配置
# 其实我们在配置注册中心Eureka客户端的时候，就已经被下拉列表了。Eureka默认的就已经进行简化zuul相关配置了
# 所以我们可以不进行zuul的相关配置，但是如果我们想要去隔离这种默认简化配置，就需要我们另外配置
zuul:
  prefix: /api    # 在/provider路由前加上的前缀
  routes:
    provider-service-name:  # 这个名字没意义，随便取
      # http://localhost:10010/api/provider/user/1 ===> 转发到 provider-service上的 http://localhost:8088/user/1
      path: /provider/**
      # url: http://localhost:8088/ 这种写法是静态地址，但是我们需要动态的服务ip。所以要用到serviceId
      serviceId: provider-service
      strip-prefix: true # 默认是true表示去除 '/api' 这个前缀:http://localhost:10010/api/provider/user/1 ==> http://localhost:8088/user/1
                         # 设置false表示不去除 '/api' 这个前缀:http://localhost:10010/api/provider/user/1 ==> http://localhost:8088/api/user/1
  ignored-services:  # 剔除指定服务的默认简化配置
    # - consumer-service 这里consumer-service的路由配置我没写，所以不剔除默认简化配置
    - provider-service  # 服务provider-service有我们自己的配置，不需要默认配置，因此这里需要剔除掉默认配置
  ribbon:
    eager-load:
      enabled: true # 启用加载ribbon
  host:
    connect-timeout-millis: 5000   # 连接超时时长




